/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.CursoCtrl;
import Controlador.DiplomaCtrl;
import Modelo.Curso;
import Modelo.Pregunta;
import Utilitarios.Imagenes;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ActionEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 *
 * @author Jekse
 */

public class Administrador extends javax.swing.JPanel {
    private final Principal p;
    private final Cursos cursos;
    private String imgRuta="";    
    private final JFileChooser jfc=new JFileChooser();    
    FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JPG, PNG & GIF","jpg","png","gif");
    private final Imagenes imgs=new Imagenes();
    private Curso curso;
    private final CursoCtrl curCt;
    private boolean mod=true;
    private final DiplomaCtrl dipCt;
    /**
     * Creates new form Admistrador
     * @param p
     * @param cursos
     * @param curCt
     */
    public Administrador(Principal p,Cursos cursos,CursoCtrl curCt) {
        initComponents();        
        this.p=p;
        this.cursos=cursos;
        this.curCt=curCt;
        dipCt=new DiplomaCtrl(null,curCt);
        jfc.setDialogTitle("Seleccion foto");
        jfc.setFileFilter(filtroImagen);
        actualizarTabla();
        hablitar(true,false,false,false,false,false,false,false,false,false,false,false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnAñadir = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblAdmin = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreCurso = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaDescripcion = new javax.swing.JTextArea();
        btnFoto = new javax.swing.JButton();
        btnCerrarSesion = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblFoto = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtCursos = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnPreguntas = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setLayout(null);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ablaze academy.png"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(0, 0, 215, 196);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/archivo-nuevo.png"))); // NOI18N
        btnNuevo.setToolTipText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        add(btnNuevo);
        btnNuevo.setBounds(40, 490, 84, 70);

        btnAñadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/anadir.png"))); // NOI18N
        btnAñadir.setToolTipText("Añadir/Modificar");
        btnAñadir.setEnabled(false);
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });
        add(btnAñadir);
        btnAñadir.setBounds(150, 490, 86, 70);

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        btnModificar.setToolTipText("Editar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        add(btnModificar);
        btnModificar.setBounds(270, 490, 85, 70);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar);
        btnEliminar.setBounds(370, 490, 80, 70);

        lblAdmin.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdmin.setText("ADMINISTRAR CURSOS");
        lblAdmin.setToolTipText("");
        add(lblAdmin);
        lblAdmin.setBounds(220, 60, 420, 80);

        txtValor.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtValor.setEnabled(false);
        add(txtValor);
        txtValor.setBounds(670, 350, 250, 23);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Codigo:");
        add(jLabel4);
        jLabel4.setBounds(590, 310, 81, 29);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Valor:");
        add(jLabel5);
        jLabel5.setBounds(600, 350, 67, 29);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("Descripción:");
        add(jLabel6);
        jLabel6.setBounds(540, 480, 130, 29);

        txtNombreCurso.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtNombreCurso.setEnabled(false);
        add(txtNombreCurso);
        txtNombreCurso.setBounds(670, 270, 250, 23);

        txtCodigo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCodigo.setEnabled(false);
        add(txtCodigo);
        txtCodigo.setBounds(670, 310, 250, 23);

        txtaDescripcion.setColumns(20);
        txtaDescripcion.setRows(5);
        txtaDescripcion.setEnabled(false);
        jScrollPane2.setViewportView(txtaDescripcion);

        add(jScrollPane2);
        jScrollPane2.setBounds(670, 400, 250, 180);

        btnFoto.setText("+ Foto");
        btnFoto.setEnabled(false);
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });
        add(btnFoto);
        btnFoto.setBounds(600, 140, 70, 22);

        btnCerrarSesion.setText("Cerrar sesion");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        add(btnCerrarSesion);
        btnCerrarSesion.setBounds(870, 20, 110, 22);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Nombre del curso:");
        add(jLabel7);
        jLabel7.setBounds(480, 270, 190, 29);

        lblFoto.setBackground(new java.awt.Color(204, 204, 204));
        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/masimg.png"))); // NOI18N
        add(lblFoto);
        lblFoto.setBounds(710, 60, 170, 190);

        jtCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtCursos.setEditingColumn(0);
        jtCursos.setEditingRow(0);
        jtCursos.setEnabled(false);
        jtCursos.setGridColor(new java.awt.Color(0, 0, 0));
        jtCursos.setShowGrid(true);
        jtCursos.getTableHeader().setReorderingAllowed(false);
        jtCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCursosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtCursos);

        add(jScrollPane3);
        jScrollPane3.setBounds(40, 210, 410, 270);

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        add(btnCancelar);
        btnCancelar.setBounds(740, 590, 110, 22);

        btnPreguntas.setText("Realizar preguntas");
        btnPreguntas.setEnabled(false);
        btnPreguntas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreguntasActionPerformed(evt);
            }
        });
        add(btnPreguntas);
        btnPreguntas.setBounds(170, 590, 140, 22);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        hablitar(true,false,false,false,false,false,false,false,false,false,true,false);
        cerrarSesion();        
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
        subirFoto();
    }//GEN-LAST:event_btnFotoActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        hablitar(false, true, false, false, true, true, true, true, true,true,false,false);
        limpiar();
        mod=true;
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        if(mod){
            añadirCurso();
        }else{
            modificar();            
        }
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void jtCursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCursosMouseClicked
        if(!curCt.cursos().isEmpty()){
            hablitar(true,false,true,true,false,false,false,false,false,false,true,true);
            traerDatos();
        }
    }//GEN-LAST:event_jtCursosMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        hablitar(true,false,false,false,false,false,false,false,false,false,false,false);
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        hablitar(false,true,false,false,true,true,false,true,true,true,false,false);
        mod=false;
        imgRuta="src\\ImagenesCursos\\"+txtCodigo.getText()+".jpg";
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnPreguntasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreguntasActionPerformed
        responder();
    }//GEN-LAST:event_btnPreguntasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPreguntas;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtCursos;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombreCurso;
    private javax.swing.JTextField txtValor;
    private javax.swing.JTextArea txtaDescripcion;
    // End of variables declaration//GEN-END:variables

    private void hablitar(boolean nuevo,boolean añadir,boolean modifi,
                          boolean eliminar,boolean foto,boolean nombre,
                          boolean cod,boolean valor,boolean descrip,
                          boolean cancel,boolean tabla,boolean pre)
    {
        btnNuevo.setEnabled(nuevo);
        btnAñadir.setEnabled(añadir);
        btnModificar.setEnabled(modifi);
        btnEliminar.setEnabled(eliminar);
        btnFoto.setEnabled(foto);
        txtNombreCurso.setEnabled(nombre);
        txtCodigo.setEnabled(cod);
        txtValor.setEnabled(valor);
        txtaDescripcion.setEnabled(descrip);
        btnCancelar.setEnabled(cancel);
        btnCancelar.setVisible(cancel);
        jtCursos.setEnabled(tabla);
        btnPreguntas.setEnabled(pre);
    }
    
    private void limpiar(){
        txtCodigo.setText("");
        txtNombreCurso.setText("");
        txtValor.setText("");
        txtaDescripcion.setText("");
        traerFoto("src\\Imagenes\\masimg.png");
        
    }
    
    private void cerrarSesion() {
        p.habilitar(true,true,true,false,false,false,false);
        p.visualizarVentanas(false,true,false,false,false,false,false,false,false,false);
        cursos.atras=false;
        p.cambiarVentanas(2);
    }
    
    private void subirFoto(){
        try{        
            if(jfc.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
                imgRuta=jfc.getSelectedFile().toString();
                traerFoto(imgRuta);                
            }                 
        }catch(HeadlessException ex){
            JOptionPane.showMessageDialog(this,"Error: "+ex.getMessage(),"Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void traerFoto(String ruta){              
        ImageIcon img=new ImageIcon(imgs.buscarImg(ruta));
        int w=lblFoto.getWidth();
        int h=lblFoto.getWidth();
        Icon icon=new ImageIcon(img.getImage().getScaledInstance(w,h,Image.SCALE_SMOOTH));
        lblFoto.setIcon(icon);
        lblFoto.repaint();
    }
    
    private void añadirCurso(){
        try{
            if(!txtNombreCurso.getText().equals("")&&!txtaDescripcion.getText().equals("")){
                curso=new Curso(txtNombreCurso.getText(),
                          Integer.parseInt(txtCodigo.getText()),
                          Float.parseFloat(txtValor.getText()),
                          "src\\ImagenesCursos\\"+txtCodigo.getText()+".jpg",
                          txtaDescripcion.getText());
                if(!imgRuta.equals("")&&curCt.añadirCurso(curso,imgRuta)){
                        imgRuta="";
                        limpiar();
                        actualizarTabla();
                        hablitar(true,false,false,false,false,false,false,false,false,false,true,false);
                        JOptionPane.showMessageDialog(this,"Curso añadido","Confirmacion",JOptionPane.INFORMATION_MESSAGE);

                }else{
                    JOptionPane.showMessageDialog(this,"No se pudo añadir curso","Alerta",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this,"Revisa que los datos sean correctos","Alerta",JOptionPane.ERROR_MESSAGE);
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this,"Revisa que los datos sean correctos","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }   
    
    private void traerDatos(){
        if(!(jtCursos.getSelectedRow()<0)){
            int cod=Integer.parseInt(jtCursos.getModel().getValueAt(jtCursos.getSelectedRow(),0).toString());
            Curso cur=curCt.buscarCurso(cod);
            txtNombreCurso.setText(cur.getNombreCurso());
            txtCodigo.setText(String.valueOf(cod));
            txtValor.setText(String.valueOf(cur.getValorCurso()));
            txtaDescripcion.setText(cur.getDescripcion());
            traerFoto(cur.getFotoCurso());
        }
    }
    
    private void eliminar(){
        try{
            int cod=Integer.parseInt(jtCursos.getModel().getValueAt(jtCursos.getSelectedRow(),0).toString());
            String ruta=curCt.buscarCurso(cod).getFotoCurso();
            if(curCt.eliminarCurso(cod,ruta)){
                actualizarTabla();
                hablitar(true,false,false,false,false,false,false,false,false,false,true,false);
                limpiar();
                JOptionPane.showMessageDialog(this,"Eliminado","Confirmacion",JOptionPane.INFORMATION_MESSAGE);                
            }else{
                JOptionPane.showMessageDialog(this,"No se pudo eliminar","Alerta",JOptionPane.ERROR_MESSAGE);
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this,"Seleccione el curso que desea eliminar","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void modificar(){
        try{
            if(!txtNombreCurso.getText().equals("")&&!txtaDescripcion.getText().equals("")){
                curso=new Curso(txtNombreCurso.getText(),
                          Integer.parseInt(txtCodigo.getText()),
                          Float.parseFloat(txtValor.getText()),
                          "src\\ImagenesCursos\\"+txtCodigo.getText()+".jpg",
                          txtaDescripcion.getText());
                if(curCt.actualizarCurso(curso,imgRuta)){
                        mod=true;                    
                        limpiar();
                        actualizarTabla();
                        hablitar(true,false,false,false,false,false,false,false,false,false,true,false);
                        imgRuta="";
                        JOptionPane.showMessageDialog(this,"Curso actualizado","Confirmacion",JOptionPane.INFORMATION_MESSAGE);

                }else{
                    JOptionPane.showMessageDialog(this,"No se pudo actualizar curso","Alerta",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this,"Revisa que los datos sean correctos","Alerta",JOptionPane.ERROR_MESSAGE);
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this,"Revisa que los datos sean correctos","Alerta",JOptionPane.ERROR_MESSAGE);
        }        
    }
    
    private void actualizarTabla(){
        estadoTabla();
        jtCursos.setModel(curCt.tabla());
        jtCursos.updateUI();
    }
    
    private void estadoTabla(){
        if(curCt.cursos().isEmpty()){
            jtCursos.setEnabled(false);
        }else{
            jtCursos.setEnabled(true);
            
        }
    }
    
    private void responder(){
        if(!(jtCursos.getSelectedRow()<0)){
            JFrame emergente = new JFrame();        
            emergente.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            emergente.setResizable(false);
            JDialog jd = new JDialog(emergente);                        
            jd.setLayout(new GridLayout(12,1));
            jd.setBounds(500,200,600,400);
            jd.setResizable(false);            
            JLabel lblPre1 = new JLabel("Pregunta 1");
            JTextField txtPre1=new JTextField();
            JLabel lblPre2 = new JLabel("Pregunta 2");
            JTextField txtPre2=new JTextField();
            JLabel lblPre3 = new JLabel("Pregunta 3");
            JTextField txtPre3=new JTextField();
            JLabel lblPre4 = new JLabel("Pregunta 4");
            JTextField txtPre4=new JTextField();
            JLabel lblPre5 = new JLabel("Pregunta 5");
            JTextField txtPre5=new JTextField();
            JButton btnGuardar = new JButton("Guardar");
            btnGuardar.addActionListener((ActionEvent e) -> {
                if(!txtPre1.getText().equals("") &&
                   !txtPre2.getText().equals("") &&
                   !txtPre3.getText().equals("") &&
                   !txtPre4.getText().equals("") &&
                   !txtPre5.getText().equals(""))
                {
                    
                    Pregunta preg;
                    preg=new Pregunta(Integer.parseInt(jtCursos.getModel().getValueAt(jtCursos.getSelectedRow(),0).toString()),
                                               txtPre1.getText());                    
                    dipCt.generarPregunta(preg);
                    preg=new Pregunta(Integer.parseInt(jtCursos.getModel().getValueAt(jtCursos.getSelectedRow(),0).toString()),
                                               txtPre2.getText());
                    dipCt.generarPregunta(preg);
                    preg=new Pregunta(Integer.parseInt(jtCursos.getModel().getValueAt(jtCursos.getSelectedRow(),0).toString()),
                                               txtPre3.getText());
                    dipCt.generarPregunta(preg);
                    preg=new Pregunta(Integer.parseInt(jtCursos.getModel().getValueAt(jtCursos.getSelectedRow(),0).toString()),
                                               txtPre4.getText());
                    dipCt.generarPregunta(preg);
                    preg=new Pregunta(Integer.parseInt(jtCursos.getModel().getValueAt(jtCursos.getSelectedRow(),0).toString()),
                                               txtPre5.getText());
                    dipCt.generarPregunta(preg);
                    emergente.dispose();
                    JOptionPane.showMessageDialog(null,"Preguntas guardadas","Alerta",JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null,"Rellene los campos","Alerta",JOptionPane.INFORMATION_MESSAGE);
                }
            });
            JButton btnCerrar = new JButton("Cancelar");
            btnCerrar.addActionListener((ActionEvent e) -> {
                emergente.dispose();
            });
            jd.add(lblPre1);
            jd.add(txtPre1);
            jd.add(lblPre2);
            jd.add(txtPre2);
            jd.add(lblPre3);
            jd.add(txtPre3);
            jd.add(lblPre4);
            jd.add(txtPre4);
            jd.add(lblPre5);
            jd.add(txtPre5);
            jd.add(btnGuardar);
            jd.add(btnCerrar);
            jd.setVisible(true);
        }
    }
    
}
